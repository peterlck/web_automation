<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.plcapital</groupId>
  <artifactId>SeleniumAutomation</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>SeleniumAutomation</name>
  <url>http://maven.apache.org</url>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- Looks like if both JUnit and TestNG dependency are declared, it will use the later? -->
    <dependency>
		<groupId>org.testng</groupId>
		<artifactId>testng</artifactId>
  		<scope>test</scope>
	</dependency>
    <dependency>
    	<groupId>org.seleniumhq.selenium</groupId>
    	<artifactId>selenium-java</artifactId>
    </dependency>
    <!--Adding jxl, log4j or poi resulted in the following
    SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
	SLF4J: Defaulting to no-operation (NOP) logger implementation
	SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.

    <dependency>
    	<groupId>net.sourceforge.jexcelapi</groupId>
    	<artifactId>jxl</artifactId>
    	<version>2.6.12</version>
    </dependency>
	<dependency>
  		<groupId>log4j</groupId>
  		<artifactId>log4j</artifactId>
  		<version>1.2.14</version>
  	</dependency>
  	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-log4j12</artifactId>
		<version>1.7.6</version>
	</dependency>
	<dependency>
		<groupId>org.apache.poi</groupId>
		<artifactId>poi-contrib</artifactId>
		<version>3.5-FINAL</version>
	</dependency>
	-->
  </dependencies>
  <dependencyManagement>
  	<dependencies>
  		<dependency>
  			<groupId>junit</groupId>
  			<artifactId>junit</artifactId>
  			<version>4.8.2</version>
  		</dependency>
  		<dependency>
  			<groupId>org.seleniumhq.selenium</groupId>
  			<artifactId>selenium-java</artifactId>
  			<version>2.40.0</version>
  		</dependency>
  		<dependency>
  			<groupId>org.testng</groupId>
  			<artifactId>testng</artifactId>
  			<version>6.3.1</version>
  			<scope>test</scope>
  		</dependency>
  	</dependencies>
  </dependencyManagement>
  <build>
  	<directory>${project.basedir}/target</directory>
  	<plugins>
  		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.1</version>
			<!--  Not sure why if this configuration is added, it complains
			No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?
			<configuration>
				<source>1.6</source>
				<target>1.6</target>
			</configuration>
			-->
		</plugin>
		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-surefire-plugin</artifactId>
			<version>2.16</version>			
			<configuration>
          		<suiteXmlFiles>
            		<suiteXmlFile>testng.xml</suiteXmlFile>
          		</suiteXmlFiles>
        	</configuration>		
			<executions>
				<execution>
					<phase>integration-test</phase>
					<goals>
						<goal>test</goal>
					</goals>
					<configuration>
					<skip>false</skip>
					<includes>
						<include>**/*Test.java</include>
					</includes>
					</configuration>
				</execution>
			</executions>
		</plugin>  
  	</plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.16</version>
        <configuration>
          <outputDirectory>${basedir}/target/newsite</outputDirectory>
        </configuration>
      </plugin>
      <!-- Need to research more on Maven Site plugin
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.3</version>
        <configuration>
          <outputDirectory>${basedir}/target/newsite</outputDirectory>
        </configuration>
      </plugin>
       -->
    </plugins>
  </reporting>
</project>
