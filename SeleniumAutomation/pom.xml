<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  	<modelVersion>4.0.0</modelVersion>
  	<groupId>com.plcapital</groupId>
  	<artifactId>SeleniumAutomation</artifactId>
  	<packaging>jar</packaging>
  	<version>1.0-SNAPSHOT</version>
  	<name>SeleniumAutomation</name>
  	<url>http://maven.apache.org</url>
  	<dependencies>
    	<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
  			<scope>test</scope>
		</dependency>
		<dependency>
     		<groupId>junit</groupId>
      		<artifactId>junit</artifactId>
      		<scope>test</scope>
    	</dependency>
    	<dependency>
    		<groupId>org.seleniumhq.selenium</groupId>
    		<artifactId>selenium-java</artifactId>
    	</dependency>
		<dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-java</artifactId>
            <version>1.1.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>info.cukes</groupId>
            <artifactId>cucumber-junit</artifactId>
            <version>1.1.2</version>
            <scope>test</scope>
        </dependency>
    	<!--Adding jxl, log4j or poi resulted in the following
    	SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
		SLF4J: Defaulting to no-operation (NOP) logger implementation
		SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.

    	<dependency>
    		<groupId>net.sourceforge.jexcelapi</groupId>
    		<artifactId>jxl</artifactId>
    		<version>2.6.12</version>
    	</dependency>
		<dependency>
  			<groupId>log4j</groupId>
  			<artifactId>log4j</artifactId>
  			<version>1.2.14</version>
  		</dependency>
  		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.6</version>
		</dependency>
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-contrib</artifactId>
			<version>3.5-FINAL</version>
		</dependency>
		-->
  	</dependencies>
  	<dependencyManagement>
  		<dependencies>
  			<dependency>
  				<groupId>junit</groupId>
  				<artifactId>junit</artifactId>
  				<version>4.8.2</version>
  				<scope>test</scope>
  			</dependency>
  			<dependency>
  				<groupId>org.seleniumhq.selenium</groupId>
  				<artifactId>selenium-java</artifactId>
  				<version>2.40.0</version>
  			</dependency>
  			<dependency>
  				<groupId>org.testng</groupId>
  				<artifactId>testng</artifactId>
  				<version>6.3.1</version>
  				<scope>test</scope>
  			</dependency>
  		</dependencies>
  	</dependencyManagement>  
  	<profiles>
    	<!-- Profile testng-test will be triggered when the system property "testng.test" is specified with the value "test" -->
    	<profile>
        	<id>testng-test</id>
        	<activation>
            	<property>
                	<name>env</name>
                	<value>test</value>
            	</property>
        	</activation>
  			<build>
  				<directory>${project.basedir}/target</directory>
  				<plugins>
        			<plugin>
                		<groupId>org.apache.maven.plugin</groupId>
                		<artifactId>echo-plugin</artifactId>
                		<version>0.1</version>
                		<configuration>
                        	<info>BUILT %s %s CONFIGURATION</info>
                        	<elements>
                                <param>ABC</param>
                                <param>ALPHA</param>
                        	</elements>
                		</configuration>
        			</plugin>
        			<plugin>
    					<groupId>org.apache.maven.plugins</groupId>
    					<artifactId>maven-antrun-plugin</artifactId>
    					<version>1.6</version>
    					<configuration>
                			<target>
                    			<echo message="Your log message for project basedir: ${project.basedir}"/>
                			</target>
                		</configuration>
                		<executions>
          					<execution>
            				<id>compile</id>
            				<phase>compile</phase>
            				<configuration>
              				<target>
                				<property name="compile_classpath" refid="maven.compile.classpath"/>
                				<!--<property name="runtime_classpath" refid="maven.runtime.classpath"/>-->
                				<!--<property name="test_classpath" refid="maven.test.classpath"/>-->
                				<!--<property name="plugin_classpath" refid="maven.plugin.classpath"/>-->
                				<ant antfile="${basedir}/build.xml">
                  					<target name="dist"/>
               		 			</ant>
              				</target>
            				</configuration>
            				<goals>
              					<goal>run</goal>
            				</goals>
          					</execution>
        				</executions>              		
        			</plugin>
  					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
						<version>3.1</version>
						<!--  Not sure why if this configuration is added, it complains
						No compiler is provided in this environment. Perhaps you are running on a JRE rather than a JDK?
						<configuration>
							<source>1.6</source>
							<target>1.6</target>
						</configuration>
						-->
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.16</version>	
						<configuration>
							<!-- I suspect skip value might not be granular enough at configuration level but at plugin level -->          					
          					<skip>false</skip>  
          					<suiteXmlFiles>
            					<suiteXmlFile>testng.xml</suiteXmlFile>
          					</suiteXmlFiles> 
        				</configuration>				
						<executions>
							<execution>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<skip>false</skip>
									<excludes>
										<exclude>com/plcapital/AppTest.java</exclude>
										<exclude>com/plcapital/JUnitDefaultGoogleTest.java</exclude>
										<exclude>com/plcapital/ExportedSeleniumIDERecordingTest.java</exclude>
									</excludes>										
								</configuration>
							</execution>
						</executions>
					</plugin>  
  				</plugins>
 			 </build>
		</profile>  	
		<profile>
        <!-- Added a junit-test profile that we can run either JUnit or TestNG tests -->
        	<id>junit-test</id>
        	<activation>
            	<property>
                	<name>env</name>
                	<value>test</value>
            	</property>               
        	</activation>
        	<build>
            	<plugins>
                	<plugin>
  						<!-- his test goal executes all of the unit tests this project can find under src/test/java 
  						with filenames matching /Test*.java, /Test.java and */*TestCase.java. -->
                    	<groupId>org.apache.maven.plugins</groupId>
                    	<artifactId>maven-surefire-plugin</artifactId>
                    	<configuration>
                    	    <skip>false</skip>
                        	<excludes>
                            	<exclude>**/com/plcapital/TestNGHelloWorldTest.java</exclude>
                        	</excludes>
                    	</configuration>
               		</plugin>
            	</plugins>
        	</build>
   		</profile>		
	</profiles>  
</project>
